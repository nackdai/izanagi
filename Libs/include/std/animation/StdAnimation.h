#if !defined(__IZANAGI_STD_STD_ANIMATION_H__)
#define __IZANAGI_STD_STD_ANIMATION_H__

#include "izDefs.h"
#include "std/StdObject.h"
#include "StdTimeline.h"

namespace izanagi {

	/**
	*/
	enum E_STD_ANM_MODE {
		E_STD_ANM_MODE_EQUATION_SHIFT  = 16,
		E_STD_ANM_MODE_EQUATION_MASK   = 0x7fff0000,

		E_STD_ANM_MODE_TRANSITION_SHIFT = 0,
		E_STD_ANM_MODE_TRANSITION_MASK  = 0x0000ffff,

		E_STD_ANM_MODE_EASE_IN     = 1 << E_STD_ANM_MODE_EQUATION_SHIFT,
		E_STD_ANM_MODE_EASE_OUT	   = 2 << E_STD_ANM_MODE_EQUATION_SHIFT,
		E_STD_ANM_MODE_EASE_IN_OUT = 3 << E_STD_ANM_MODE_EQUATION_SHIFT,

		E_STD_ANM_MODE_TRANSITION_BEGIN = 0,
			E_STD_ANM_MODE_TRANSITION_BACK = E_STD_ANM_MODE_TRANSITION_BEGIN,
			E_STD_ANM_MODE_TRANSITION_BOUNCE,
			E_STD_ANM_MODE_TRANSITION_CIRC,
			E_STD_ANM_MODE_TRANSITION_CUBIC,
			E_STD_ANM_MODE_TRANSITION_ELASTIC,
			E_STD_ANM_MODE_TRANSITION_EXPO,
			E_STD_ANM_MODE_TRANSITION_QUAD,
			E_STD_ANM_MODE_TRANSITION_QUART,
			E_STD_ANM_MODE_TRANSITION_QUINT,
			E_STD_ANM_MODE_TRANSITION_SINE,
			E_STD_ANM_MODE_TRANSITION_LINEAR,
		E_STD_ANM_MODE_TRANSITION_END = E_STD_ANM_MODE_TRANSITION_LINEAR,
		E_STD_ANM_MODE_TRANSITION_NUM,

		/////////////////////////////////////////////////

		E_STD_ANM_MODE_BACK_EASE_IN     = E_STD_ANM_MODE_TRANSITION_BACK | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_BACK_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_BACK | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_BACK_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_BACK | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_BOUNCE_EASE_IN     = E_STD_ANM_MODE_TRANSITION_BOUNCE | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_BOUNCE_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_BOUNCE | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_BOUNCE_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_BOUNCE | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_CIRC_EASE_IN     = E_STD_ANM_MODE_TRANSITION_CIRC | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_CIRC_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_CIRC | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_CIRC_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_CIRC | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_CUBIC_EASE_IN     = E_STD_ANM_MODE_TRANSITION_CUBIC | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_CUBIC_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_CUBIC | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_CUBIC_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_CUBIC | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_ELASTIC_EASE_IN     = E_STD_ANM_MODE_TRANSITION_ELASTIC | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_ELASTIC_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_ELASTIC | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_ELASTIC_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_ELASTIC | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_EXPO_EASE_IN     = E_STD_ANM_MODE_TRANSITION_EXPO | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_EXPO_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_EXPO | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_EXPO_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_EXPO | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_QUAD_EASE_IN     = E_STD_ANM_MODE_TRANSITION_QUAD | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_QUAD_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_QUAD | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_QUAD_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_QUAD | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_QUART_EASE_IN     = E_STD_ANM_MODE_TRANSITION_QUART | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_QUART_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_QUART | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_QUART_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_QUART | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_QUINT_EASE_IN     = E_STD_ANM_MODE_TRANSITION_QUINT | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_QUINT_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_QUINT | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_QUINT_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_QUINT | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_SINE_EASE_IN     = E_STD_ANM_MODE_TRANSITION_SINE | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_SINE_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_SINE | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_SINE_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_SINE | E_STD_ANM_MODE_EASE_IN_OUT,

		E_STD_ANM_MODE_LINEAR_EASE_IN     = E_STD_ANM_MODE_TRANSITION_LINEAR | E_STD_ANM_MODE_EASE_IN,
		E_STD_ANM_MODE_LINEAR_EASE_OUT    = E_STD_ANM_MODE_TRANSITION_LINEAR | E_STD_ANM_MODE_EASE_OUT,
		E_STD_ANM_MODE_LINEAR_EASE_IN_OUT = E_STD_ANM_MODE_TRANSITION_LINEAR | E_STD_ANM_MODE_EASE_IN_OUT,
	};

	class CStdTimeline;

	/**
	*/
	class CStdAnimation {
	public:
		CStdAnimation()
		{
			Init(
				E_STD_ANM_MODE_LINEAR_EASE_IN,
				0.0f, 0.0f);
		}

		CStdAnimation(
			E_STD_ANM_MODE mode,
			IZ_FLOAT fStart,
			IZ_FLOAT fEnd)
		{
			Init(
				mode,
				fStart, fEnd);
		}

		~CStdAnimation() {}

		NO_COPIABLE(CStdAnimation);

	public:
		IZ_FLOAT GetValue(const CStdTimeline& cTimeline);

		void Init(
			E_STD_ANM_MODE mode,
			IZ_FLOAT fStart,
			IZ_FLOAT fEnd)
		{
			SetRange(fStart, fEnd);
			SetMode(mode);
		}

		void SetRange(
			IZ_FLOAT fStart,
			IZ_FLOAT fEnd)
		{
			m_fStart = fStart;
			m_fEnd = fEnd;
		}

		IZ_FLOAT GetStart() const { return m_fStart; }
		IZ_FLOAT GetEnd() const { return m_fEnd; }

		void SetMode(E_STD_ANM_MODE mode);
		E_STD_ANM_MODE GetMode() const;

	protected:
		E_STD_ANM_MODE m_nTransition;
		E_STD_ANM_MODE m_nEquation;

		IZ_FLOAT m_fStart;
		IZ_FLOAT m_fEnd;
	};
}	// namespace izanagi

#endif	// #if !defined(__IZANAGI_STD_STD_ANIMATION_H__)
