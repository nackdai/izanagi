//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20499
//
//
///
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   int predicate;                     // Offset:    0 Size:     4
//
// }
//
// interfaces $ThisPointer
// {
//
//   interface iChangeColour gAbstractColourChanger;// Offset:    0 Size:     1
//   interface iChangeColour gAbstractColourChangerB;// Offset:    1 Size:     1
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// COLOR                    0   xyz         0     NONE   float   xyz 
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
//
// Available Class Types:
//
// Name                             ID CB Stride Texture Sampler
// ------------------------------ ---- --------- ------- -------
// cUnchangedColour                  0         0       0       0
// cTexColour                        1         0       1       0
// cHalfColour                       2         0       0       0
// cDoubleColour                     3         0       0       0
//
// Interface slots, 2 total:
//
//             Slots
// +----------+---------+---------------------------------------
// | Type ID  |   0     |0    1    2    3    
// | Table ID |         |0    1    2    3    
// +----------+---------+---------------------------------------
// | Type ID  |   1     |0    1    2    3    
// | Table ID |         |4    5    6    7    
// +----------+---------+---------------------------------------
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_function_body fb0
dcl_function_body fb1
dcl_function_body fb2
dcl_function_body fb3
dcl_function_body fb4
dcl_function_body fb5
dcl_function_body fb6
dcl_function_body fb7
dcl_function_table ft0 = {fb0}
dcl_function_table ft1 = {fb1}
dcl_function_table ft2 = {fb2}
dcl_function_table ft3 = {fb3}
dcl_function_table ft4 = {fb4}
dcl_function_table ft5 = {fb5}
dcl_function_table ft6 = {fb6}
dcl_function_table ft7 = {fb7}
dcl_interface fp0[1][1] = {ft0, ft1, ft2, ft3}
dcl_interface fp1[1][1] = {ft4, ft5, ft6, ft7}
dcl_input_ps linear v0.xyz
dcl_output o0.xyzw
dcl_temps 2
fcall fp0[0][0]
if_nz cb0[0].x
  fcall fp1[0][0]
endif 
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
label fb0
mov r0.xyz, v0.xyzx
ret 
label fb1
ftou r1.xy, v0.xyxx
mov r1.zw, l(0,0,0,0)
mov r0.w, this[0].z
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r1.xyzw, t[r0.w + 0].xyzw
ret 
label fb2
mul r0.xyz, v0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
ret 
label fb3
add r0.xyz, v0.xyzx, v0.xyzx
ret 
label fb4
ret 
label fb5
ftou r1.xy, r0.xyxx
mov r1.zw, l(0,0,0,0)
mov r0.w, this[1].z
ld_indexable(texture2d)(float,float,float,float) r0.xyz, r1.xyzw, t[r0.w + 0].xyzw
ret 
label fb6
mul r0.xyz, r0.xyzx, l(0.500000, 0.500000, 0.500000, 0.000000)
ret 
label fb7
add r0.xyz, r0.xyzx, r0.xyzx
ret 
// Approximately 28 instruction slots used
