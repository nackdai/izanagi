//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20499
//
//
///
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 _Time;                      // Offset:    0 Size:    16 [unused]
//   float4 _SinTime;                   // Offset:   16 Size:    16 [unused]
//   float4 _CosTime;                   // Offset:   32 Size:    16 [unused]
//   float4 var_DeltaTime;              // Offset:   48 Size:    16 [unused]
//   float3 _WorldSpaceCameraPos;       // Offset:   64 Size:    12 [unused]
//   float4 _ProjectionParams;          // Offset:   80 Size:    16 [unused]
//   float4 _ScreenParams;              // Offset:   96 Size:    16 [unused]
//   float4 _ZBufferParams;             // Offset:  112 Size:    16 [unused]
//   float4 var_OrthoParams;            // Offset:  128 Size:    16 [unused]
//   float4 var_CameraWorldClipPlanes[6];// Offset:  144 Size:    96 [unused]
//   float4x4 var_CameraProjection;     // Offset:  240 Size:    64 [unused]
//   float4x4 var_CameraInvProjection;  // Offset:  304 Size:    64 [unused]
//   float4 _WorldSpaceLightPos0;       // Offset:  368 Size:    16 [unused]
//   float4 _LightPositionRange;        // Offset:  384 Size:    16 [unused]
//   float4 var_4LightPosX0;            // Offset:  400 Size:    16 [unused]
//   float4 var_4LightPosY0;            // Offset:  416 Size:    16 [unused]
//   float4 var_4LightPosZ0;            // Offset:  432 Size:    16 [unused]
//   float4 var_4LightAtten0;           // Offset:  448 Size:    16 [unused]
//   float4 var_LightColor[8];          // Offset:  464 Size:   128 [unused]
//   float4 var_LightPosition[8];       // Offset:  592 Size:   128 [unused]
//   float4 var_LightAtten[8];          // Offset:  720 Size:   128 [unused]
//   float4 var_SpotDirection[8];       // Offset:  848 Size:   128 [unused]
//   float4 var_SHAr;                   // Offset:  976 Size:    16 [unused]
//   float4 var_SHAg;                   // Offset:  992 Size:    16 [unused]
//   float4 var_SHAb;                   // Offset: 1008 Size:    16 [unused]
//   float4 var_SHBr;                   // Offset: 1024 Size:    16 [unused]
//   float4 var_SHBg;                   // Offset: 1040 Size:    16 [unused]
//   float4 var_SHBb;                   // Offset: 1056 Size:    16 [unused]
//   float4 var_SHC;                    // Offset: 1072 Size:    16 [unused]
//   float3 var_LightColor0;            // Offset: 1088 Size:    12 [unused]
//   float3 var_LightColor1;            // Offset: 1104 Size:    12 [unused]
//   float3 var_LightColor2;            // Offset: 1120 Size:    12 [unused]
//   float3 var_LightColor3;            // Offset: 1136 Size:    12 [unused]
//   float4 var_ShadowSplitSpheres[4];  // Offset: 1152 Size:    64 [unused]
//   float4 var_ShadowSplitSqRadii;     // Offset: 1216 Size:    16 [unused]
//   float4 var_LightShadowBias;        // Offset: 1232 Size:    16 [unused]
//   float4 _LightSplitsNear;           // Offset: 1248 Size:    16 [unused]
//   float4 _LightSplitsFar;            // Offset: 1264 Size:    16 [unused]
//   float4x4 var_World2Shadow[4];      // Offset: 1280 Size:   256 [unused]
//   float4 _LightShadowData;           // Offset: 1536 Size:    16 [unused]
//   float4 var_ShadowFadeCenterAndType;// Offset: 1552 Size:    16 [unused]
//   float4x4 glstate_matrix_mvp;       // Offset: 1568 Size:    64 [unused]
//   float4x4 glstate_matrix_modelview0;// Offset: 1632 Size:    64 [unused]
//   float4x4 glstate_matrix_invtrans_modelview0;// Offset: 1696 Size:    64 [unused]
//   float4x4 _Object2World;            // Offset: 1760 Size:    64 [unused]
//   float4x4 _World2Object;            // Offset: 1824 Size:    64 [unused]
//   float4 var_LODFade;                // Offset: 1888 Size:    16 [unused]
//   float4x4 glstate_matrix_transpose_modelview0;// Offset: 1904 Size:    64 [unused]
//   float4x4 glstate_matrix_projection;// Offset: 1968 Size:    64 [unused]
//   float4 glstate_lightmodel_ambient; // Offset: 2032 Size:    16 [unused]
//   float4x4 var_MatrixV;              // Offset: 2048 Size:    64 [unused]
//   float4x4 var_MatrixVP;             // Offset: 2112 Size:    64 [unused]
//   float4 var_AmbientSky;             // Offset: 2176 Size:    16 [unused]
//   float4 var_AmbientGround;          // Offset: 2192 Size:    16 [unused]
//   float4 var_FogColor;               // Offset: 2208 Size:    16 [unused]
//   float4 var_FogParams;              // Offset: 2224 Size:    16 [unused]
//   float4 var_ColorSpaceGrey;         // Offset: 2240 Size:    16 [unused]
//   float4 var_ColorSpaceDouble;       // Offset: 2256 Size:    16 [unused]
//   float _TessEdge;                   // Offset: 2272 Size:     4
//   float _TessInside;                 // Offset: 2276 Size:     4 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Patch Constant signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TessFactor            0   x           0  TRIEDGE   float   x   
// POS                      3    yzw        0     NONE   float    yzw
// SV_TessFactor            1   x           1  TRIEDGE   float   x   
// POS                      4    yzw        1     NONE   float    yzw
// SV_TessFactor            2   x           2  TRIEDGE   float   x   
// POS                      5    yzw        2     NONE   float    yzw
// SV_InsideTessFactor      0   x           3   TRIINT   float   x   
// POS                      6    yzw        3     NONE   float    yzw
// POS                      7   xyz         4     NONE   float   xyz 
// POS                      8   xyz         5     NONE   float   xyz 
// CENTER                   0   xyz         6     NONE   float   xyz 
// NORMAL                   3   xyz         7     NONE   float   xyz 
// NORMAL                   4   xyz         8     NONE   float   xyz 
// NORMAL                   5   xyz         9     NONE   float   xyz 
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POS                      0   xyzw        0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POS                      0   xyz         0     NONE   float   xyz 
// NORMAL                   0   xyz         1     NONE   float   xyz 
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
// Tessellation Domain   # of control points
// -------------------- --------------------
// Triangle                                3
//
// Tessellation Output Primitive  Partitioning Type 
// ------------------------------ ------------------
// Clockwise Triangles            Odd Fractional    
//
hs_5_0
hs_decls 
dcl_input_control_point_count 3
dcl_output_control_point_count 3
dcl_tessellator_domain domain_tri
dcl_tessellator_partitioning partitioning_fractional_odd
dcl_tessellator_output_primitive output_triangle_cw
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[143], immediateIndexed
hs_control_point_phase 
dcl_input vOutputControlPointID
dcl_input v[3][0].xyz
dcl_input v[3][1].xyz
dcl_input v[3][2].xy
dcl_output o0.xyz
dcl_output o1.xyz
dcl_output o2.xy
dcl_temps 1
mov r0.x, vOutputControlPointID
mov o0.xyz, v[r0.x + 0][0].xyzx
mov o1.xyz, v[r0.x + 0][1].xyzx
mov o2.xy, v[r0.x + 0][2].xyxx
ret 
hs_fork_phase 
dcl_hs_fork_phase_instance_count 3
dcl_input vForkInstanceID
dcl_output_siv o0.x, finalTriUeq0EdgeTessFactor
dcl_output_siv o1.x, finalTriVeq0EdgeTessFactor
dcl_output_siv o2.x, finalTriWeq0EdgeTessFactor
dcl_temps 1
dcl_indexrange o0.x 3
mov r0.x, vForkInstanceID.x
mov o[r0.x + 0].x, cb0[142].x
ret 
hs_fork_phase 
dcl_output_siv o3.x, finalTriInsideTessFactor
mov o3.x, cb0[142].x
ret 
hs_fork_phase 
dcl_hs_fork_phase_instance_count 4
dcl_input vForkInstanceID
dcl_input vicp[3][0].xyz
dcl_input vicp[3][1].xyz
dcl_output o0.yzw
dcl_output o1.yzw
dcl_output o2.yzw
dcl_output o3.yzw
dcl_temps 2
dcl_indexrange o0.yzw 4
iadd r0.xy, -vForkInstanceID.xxxx, l(1, 4, 0, 0)
ult r0.z, vForkInstanceID.x, l(2)
movc r0.x, r0.z, r0.x, r0.y
iadd r0.y, vForkInstanceID.x, l(-1)
movc r0.y, r0.z, vForkInstanceID.x, r0.y
add r1.xyz, -vicp[r0.y + 0][0].xyzx, vicp[r0.x + 0][0].xyzx
mad r0.xzw, vicp[r0.y + 0][0].xxyz, l(2.000000, 0.000000, 2.000000, 2.000000), vicp[r0.x + 0][0].xxyz
dp3 r1.x, r1.xyzx, vicp[r0.y + 0][1].xyzx
mad r0.xyz, -r1.xxxx, vicp[r0.y + 0][1].xyzx, r0.xzwx
mul r0.xyz, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
mov r0.w, vForkInstanceID.x
mov o[r0.w + 0].yzw, r0.xxyz
ret 
hs_fork_phase 
dcl_hs_fork_phase_instance_count 2
dcl_input vForkInstanceID
dcl_input vicp[3][0].xyz
dcl_input vicp[3][1].xyz
dcl_output o4.xyz
dcl_output o5.xyz
dcl_temps 2
dcl_indexrange o4.xyz 2
ult r0.x, vForkInstanceID.x, l(1)
movc r0.x, r0.x, l(0), l(2)
iadd r0.y, vForkInstanceID.x, l(2)
udiv null, r0.y, r0.y, l(3)
add r1.xyz, -vicp[r0.y + 0][0].xyzx, vicp[r0.x + 0][0].xyzx
mad r0.xzw, vicp[r0.y + 0][0].xxyz, l(2.000000, 0.000000, 2.000000, 2.000000), vicp[r0.x + 0][0].xxyz
dp3 r1.x, r1.xyzx, vicp[r0.y + 0][1].xyzx
mad r0.xyz, -r1.xxxx, vicp[r0.y + 0][1].xyzx, r0.xzwx
mul r0.xyz, r0.xyzx, l(0.333333, 0.333333, 0.333333, 0.000000)
mov r0.w, vForkInstanceID.x
mov o[r0.w + 4].xyz, r0.xyzx
ret 
hs_fork_phase 
dcl_hs_fork_phase_instance_count 3
dcl_input vForkInstanceID
dcl_input vicp[3][0].xyz
dcl_input vicp[3][1].xyz
dcl_output o7.xyz
dcl_output o8.xyz
dcl_output o9.xyz
dcl_temps 3
dcl_indexrange o7.xyz 3
iadd r0.x, vForkInstanceID.x, l(1)
udiv null, r0.x, r0.x, l(3)
mov r0.y, vForkInstanceID.x
add r1.xyz, vicp[r0.x + 0][1].xyzx, vicp[r0.y + 0][1].xyzx
add r0.xzw, -vicp[r0.y + 0][0].xxyz, vicp[r0.x + 0][0].xxyz
dp3 r1.w, r0.xzwx, r1.xyzx
add r1.w, r1.w, r1.w
dp3 r2.x, r0.xzwx, r0.xzwx
div r1.w, r1.w, r2.x
mad r0.xzw, -r1.wwww, r0.xxzw, r1.xxyz
dp3 r1.x, r0.xzwx, r0.xzwx
rsq r1.x, r1.x
mul r0.xzw, r0.xxzw, r1.xxxx
mov o[r0.y + 7].xyz, r0.xzwx
ret 
hs_join_phase 
dcl_input vpc0.y
dcl_input vpc1.y
dcl_input vpc2.y
dcl_input vpc3.y
dcl_input vpc4.x
dcl_input vpc5.x
dcl_input vicp[3][0].x
dcl_output o6.x
dcl_temps 1
add r0.x, vpc0.y, vpc1.y
add r0.x, r0.x, vpc2.y
add r0.x, r0.x, vpc3.y
add r0.x, r0.x, vpc4.x
add r0.x, r0.x, vpc5.x
mul r0.x, r0.x, l(0.166667)
add r0.y, vicp[1][0].x, vicp[0][0].x
add r0.y, r0.y, vicp[2][0].x
mad r0.y, -r0.y, l(0.333333), r0.x
mad o6.x, r0.y, l(0.500000), r0.x
ret 
hs_join_phase 
dcl_input vpc0.z
dcl_input vpc1.z
dcl_input vpc2.z
dcl_input vpc3.z
dcl_input vpc4.y
dcl_input vpc5.y
dcl_input vicp[3][0].y
dcl_output o6.y
dcl_temps 1
add r0.x, vpc0.z, vpc1.z
add r0.x, r0.x, vpc2.z
add r0.x, r0.x, vpc3.z
add r0.x, r0.x, vpc4.y
add r0.x, r0.x, vpc5.y
mul r0.x, r0.x, l(0.166667)
add r0.y, vicp[1][0].y, vicp[0][0].y
add r0.y, r0.y, vicp[2][0].y
mad r0.y, -r0.y, l(0.333333), r0.x
mad o6.y, r0.y, l(0.500000), r0.x
ret 
hs_join_phase 
dcl_input vpc0.w
dcl_input vpc1.w
dcl_input vpc2.w
dcl_input vpc3.w
dcl_input vpc4.z
dcl_input vpc5.z
dcl_input vicp[3][0].z
dcl_output o6.z
dcl_temps 1
add r0.x, vpc0.w, vpc1.w
add r0.x, r0.x, vpc2.w
add r0.x, r0.x, vpc3.w
add r0.x, r0.x, vpc4.z
add r0.x, r0.x, vpc5.z
mul r0.x, r0.x, l(0.166667)
add r0.y, vicp[1][0].z, vicp[0][0].z
add r0.y, r0.y, vicp[2][0].z
mad r0.y, -r0.y, l(0.333333), r0.x
mad o6.z, r0.y, l(0.500000), r0.x
ret 
// Approximately 83 instruction slots used
