//
// Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
//
//
//   fxc /DFXAA_HLSL_4=1 /T ps_5_0 /Fo fxaa.o /Fc fxaa.asm fxaa
//
//
// Buffer Definitions: 
//
// cbuffer cbFxaa
// {
//
//   float4 rcpFrame;                   // Offset:    0 Size:    16
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// anisotropicSampler                sampler      NA          NA    3        1
// inputTexture                      texture  float4          2d    0        1
// cbFxaa                            cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_POSITION              0   xyzw        0      POS  float       
// TEXCOORD                 0   xy          1     NONE  float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue Format   Used
// -------------------- ----- ------ -------- -------- ------ ------
// SV_TARGET                0   xyzw        0   TARGET  float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb1[1], immediateIndexed
dcl_sampler s3, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v1.xy
dcl_output o0.xyzw
dcl_temps 8
sample_l_indexable(0,-1,0)(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
sample_l_indexable(-1,0,0)(texture2d)(float,float,float,float) r1.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
sample_l_indexable(0,0,0)(texture2d)(float,float,float,float) r2.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
sample_l_indexable(1,0,0)(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
sample_l_indexable(0,1,0)(texture2d)(float,float,float,float) r4.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
mad r0.w, r0.y, l(1.963211), r0.x
mad r1.w, r1.y, l(1.963211), r1.x
mad r2.w, r2.y, l(1.963211), r2.x
mad r3.w, r3.y, l(1.963211), r3.x
mad r4.w, r4.y, l(1.963211), r4.x
min r5.x, r0.w, r1.w
min r5.y, r3.w, r4.w
min r5.x, r5.y, r5.x
min r5.x, r2.w, r5.x
max r5.y, r0.w, r1.w
max r5.z, r3.w, r4.w
max r5.y, r5.z, r5.y
max r5.y, r2.w, r5.y
add r5.x, -r5.x, r5.y
mul r5.y, r5.y, l(0.125000)
max r5.y, r5.y, l(0.041667)
ge r5.y, r5.x, r5.y
if_nz r5.y
  add r0.xyz, r0.xyzx, r1.xyzx
  add r0.xyz, r2.xyzx, r0.xyzx
  add r0.xyz, r3.xyzx, r0.xyzx
  add r0.xyz, r4.xyzx, r0.xyzx
  add r1.x, r0.w, r1.w
  add r1.x, r3.w, r1.x
  add r1.x, r4.w, r1.x
  mad r1.x, r1.x, l(0.250000), -r2.w
  div r1.x, |r1.x|, r5.x
  add r1.x, r1.x, l(-0.250000)
  max r1.x, r1.x, l(0.000000)
  mul r1.x, r1.x, l(1.333333)
  min r1.x, r1.x, l(0.750000)
  sample_l_indexable(-1,-1,0)(texture2d)(float,float,float,float) r3.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
  sample_l_indexable(1,-1,0)(texture2d)(float,float,float,float) r4.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
  sample_l_indexable(-1,1,0)(texture2d)(float,float,float,float) r5.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
  sample_l_indexable(1,1,0)(texture2d)(float,float,float,float) r6.xyz, v1.xyxx, t0.xyzw, s3, l(0.000000)
  add r7.xyz, r3.xyzx, r4.xyzx
  add r7.xyz, r5.xyzx, r7.xyzx
  add r7.xyz, r6.xyzx, r7.xyzx
  add r0.xyz, r0.xyzx, r7.xyzx
  mul r0.xyz, r1.xxxx, r0.xyzx
  mad r1.y, r3.y, l(1.963211), r3.x
  mad r1.z, r4.y, l(1.963211), r4.x
  mad r3.x, r5.y, l(1.963211), r5.x
  mad r3.y, r6.y, l(1.963211), r6.x
  mul r3.z, r0.w, l(-0.500000)
  mad r3.z, r1.y, l(0.250000), r3.z
  mad r3.z, r1.z, l(0.250000), r3.z
  mul r4.x, r1.w, l(-0.500000)
  mad r4.y, r1.w, l(0.500000), -r2.w
  mul r4.z, r3.w, l(-0.500000)
  mad r4.y, r3.w, l(0.500000), r4.y
  add r3.z, |r3.z|, |r4.y|
  mul r4.y, r4.w, l(-0.500000)
  mad r4.y, r3.x, l(0.250000), r4.y
  mad r4.y, r3.y, l(0.250000), r4.y
  add r3.z, r3.z, |r4.y|
  mad r1.y, r1.y, l(0.250000), r4.x
  mad r1.y, r3.x, l(0.250000), r1.y
  mad r3.x, r0.w, l(0.500000), -r2.w
  mad r3.x, r4.w, l(0.500000), r3.x
  add r1.y, |r1.y|, |r3.x|
  mad r1.z, r1.z, l(0.250000), r4.z
  mad r1.z, r3.y, l(0.250000), r1.z
  add r1.y, |r1.z|, r1.y
  ge r1.y, r1.y, r3.z
  movc r1.z, r1.y, -cb1[0].y, -cb1[0].x
  movc r0.w, r1.y, r0.w, r1.w
  movc r1.w, r1.y, r4.w, r3.w
  add r3.x, -r2.w, r0.w
  add r3.y, -r2.w, r1.w
  add r0.w, r2.w, r0.w
  mul r0.w, r0.w, l(0.500000)
  add r1.w, r2.w, r1.w
  mul r1.w, r1.w, l(0.500000)
  ge r3.z, |r3.x|, |r3.y|
  movc r0.w, r3.z, r0.w, r1.w
  max r1.w, |r3.y|, |r3.x|
  movc r1.z, r3.z, r1.z, -r1.z
  mul r3.x, r1.z, l(0.500000)
  movc r3.y, r1.y, l(0), r3.x
  and r3.x, r1.y, r3.x
  add r4.xy, r3.yxyy, v1.xyxx
  mul r1.w, r1.w, l(0.250000)
  mov r3.yz, l(0,0,0,0)
  mov r3.xw, cb1[0].xxxy
  movc r3.xy, r1.yyyy, r3.xyxx, r3.zwzz
  add r3.zw, -r3.xxxy, r4.xxxy
  add r4.xy, r3.xyxx, r4.xyxx
  mov r4.zw, r3.zzzw
  mov r5.xy, r4.xyxx
  mov r5.zw, r0.wwww
  mov r6.xyz, l(0,0,0,0)
  loop 
    ige r6.w, r6.z, l(16)
    breakc_nz r6.w
    if_z r6.x
      sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r4.zwzz, t0.xyzw, s3, l(0.000000)
      mad r6.w, r7.y, l(1.963211), r7.x
    else 
      mov r6.w, r5.z
    endif 
    if_z r6.y
      sample_l_indexable(texture2d)(float,float,float,float) r7.xy, r5.xyxx, t0.xyzw, s3, l(0.000000)
      mad r7.x, r7.y, l(1.963211), r7.x
    else 
      mov r7.x, r5.w
    endif 
    add r7.y, -r0.w, r6.w
    ge r7.y, |r7.y|, r1.w
    or r6.x, r6.x, r7.y
    add r7.y, -r0.w, r7.x
    ge r7.y, |r7.y|, r1.w
    or r6.y, r6.y, r7.y
    and r7.y, r6.y, r6.x
    if_nz r7.y
      mov r5.z, r6.w
      mov r5.w, r7.x
      break 
    endif 
    add r7.yz, -r3.xxyx, r4.zzwz
    movc r4.zw, r6.xxxx, r4.zzzw, r7.yyyz
    add r7.yz, r3.xxyx, r5.xxyx
    movc r5.xy, r6.yyyy, r5.xyxx, r7.yzyy
    iadd r6.z, r6.z, l(1)
    mov r5.z, r6.w
    mov r5.w, r7.x
  endloop 
  add r3.xy, -r4.zwzz, v1.xyxx
  movc r1.w, r1.y, r3.x, r3.y
  add r3.xy, r5.xyxx, -v1.xyxx
  movc r3.x, r1.y, r3.x, r3.y
  lt r3.y, r1.w, r3.x
  movc r3.y, r3.y, r5.z, r5.w
  add r2.w, -r0.w, r2.w
  lt r2.w, r2.w, l(0.000000)
  add r0.w, -r0.w, r3.y
  lt r0.w, r0.w, l(0.000000)
  ieq r0.w, r2.w, r0.w
  movc r0.w, r0.w, l(0), r1.z
  add r1.z, r1.w, r3.x
  min r1.w, r1.w, r3.x
  div r1.z, l(-1.000000), r1.z
  mad r1.z, r1.w, r1.z, l(0.500000)
  mul r0.w, r0.w, r1.z
  movc r1.z, r1.y, l(0), r0.w
  add r3.x, r1.z, v1.x
  and r0.w, r0.w, r1.y
  add r3.y, r0.w, v1.y
  sample_l_indexable(texture2d)(float,float,float,float) r1.yzw, r3.xyxx, t0.wxyz, s3, l(0.000000)
  mad r0.xyz, r0.xyzx, l(0.111111, 0.111111, 0.111111, 0.000000), r1.yzwy
  mad r2.xyz, -r1.xxxx, r1.yzwy, r0.xyzx
endif 
mov o0.xyz, r2.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 160 instruction slots used
