//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20499
//
//
///
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   float4 diffuse;                    // Offset:    0 Size:    16
//
// }
//
// cbuffer transforms
// {
//
//   struct
//   {
//       
//       float4x4 modelview;            // Offset:    0
//       int unusedTestA;               // Offset:   64
//
//   } A;                               // Offset:    0 Size:    68
//   
//   struct
//   {
//       
//       int unusedTestB;               // Offset:   80
//       float4x4 projection;           // Offset:   96
//
//   } B;                               // Offset:   80 Size:    80
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
// transforms                        cbuffer      NA          NA    1        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
//
vs_4_0
dcl_constantbuffer cb0[1], immediateIndexed
dcl_constantbuffer cb1[10], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_temps 1
mul r0.xyzw, cb1[0].xyzw, cb1[6].xyzw
dp4 o0.x, v0.xyzw, r0.xyzw
mul r0.xyzw, cb1[1].xyzw, cb1[7].xyzw
dp4 o0.y, v0.xyzw, r0.xyzw
mul r0.xyzw, cb1[2].xyzw, cb1[8].xyzw
dp4 o0.z, v0.xyzw, r0.xyzw
mul r0.xyzw, cb1[3].xyzw, cb1[9].xyzw
dp4 o0.w, v0.xyzw, r0.xyzw
mov o1.xyzw, cb0[0].xyzw
ret 
// Approximately 10 instruction slots used
