//
// Generated by Microsoft (R) HLSL Shader Compiler 9.30.9200.20499
//
//
///
// Buffer Definitions: 
//
// cbuffer $Globals
// {
//
//   int p0;                            // Offset:    0 Size:     4 [unused]
//   int p1;                            // Offset:    4 Size:     4
//   int p2;                            // Offset:    8 Size:     4
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim Slot Elements
// ------------------------------ ---------- ------- ----------- ---- --------
// $Globals                          cbuffer      NA          NA    0        1
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_Position              0   xyzw        0      POS   float   xyzw
//
vs_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer cb0[1], immediateIndexed
dcl_input v0.xyzw
dcl_output_siv o0.xyzw, position
dcl_temps 3
mov r1.xy, cb0[0].yzyy
mov r0.xyzw, v0.xyzw
loop 
  lt r1.z, l(100.000000), r0.x
  breakc_nz r1.z
  continuec_z r1.x
  add r2.xyzw, r0.xyzw, r0.xyzw
  ine r1.z, r1.y, l(0)
  movc r1.w, r1.y, r1.y, l(0)
  mov r0.xyzw, r2.xyzw
  mov r1.y, r1.w
  continuec_nz r1.z
  mov r0.xyzw, r2.xyzw
endloop 
mov o0.xyzw, r0.xyzw
ret 
// Approximately 16 instruction slots used
